{"version":3,"sources":["pages/Menu.js","components/AnalogClock/resources/clockborder.svg","components/AnalogClock/resources/hourhand.svg","components/AnalogClock/resources/minutehand.svg","components/AnalogClock/resources/secondhand.svg","components/AnalogClock/index.tsx","pages/Clock.tsx","pages/Weather.tsx","pages/resources/completed.svg","pages/resources/todo.svg","pages/Tasks.tsx","pages/Music.tsx","App.js","index.js"],"names":["Menu","to","AnalogClock","timeZone","useState","Date","date","setDate","min","getMinutes","hour","getHours","getTimezoneOffset","sec","getSeconds","useEffect","timerID","setInterval","tick","clearInterval","pad","num","size","toString","length","secStyles","transform","minStyles","hourStyles","className","src","ClockBorder","alt","SecondHand","style","HourHand","MinuteHand","Clock","Row","name1","offset1","name2","offset2","TZName1","TZName2","Fragment","Grid","container","alignItems","item","xs","SingleClock","d","ExpandedClock","useParams","city1","city2","city3","city4","TZ1","TZ2","TZ3","TZ4","Fade","in","timeout","spacing","backgroundColor","path","children","Weather","city","weatherInfo","setWeatherInfo","API_KEY","window","innerWidth","a","fetch","method","then","data","json","resultCurrent","coord","lat","lon","resultForecast","weatherData","currentTemp","Math","round","main","temp","tempMin","daily","tempMax","max","weatherType","weather","weatherTypeIcon","icon","hourlyForecast","hourly","map","setUTCSeconds","dt","timezone_offset","type","dailyForecast","weekday","Array","day","getDay","fetchData","SmallView","direction","justify","Header","HourlyForcast","index","WeeklyForcast","textAlign","Tasks","tasks","setTasks","text","isComplete","TaskItem","task","onClick","list","Completed","ToDo","scopes","Music","headers","token","Headers","GET","endpoint","PUT","POST","getTrackList","trackContext","id","uri","split","trackList","playlistRespose","items","track","albumResponse","artistRespose","tracks","forEach","element","image","album","images","url","MusicViewer","responseToken","setTrackList","currentTrack","setCurrentTrack","progress","setProgress","isPlaying","setIsPlaying","now","setStartTime","lastTime","setLastTime","GET_TRACK","trackRespose","is_playing","progress_ms","context","getInitialInfo","duration_ms","setTrack","TrackListContainer","currentIndex","getIndex","name","listArtists","artists","trackListItem","names","artist","finalName","pop","join","findIndex","playPause","amount","width","fontSize","Redirect","content","Login","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6c76c68.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nfunction Menu() {\r\n\r\n    return (\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/clock/Winnipeg/-5/New%20York/-4/London/1/Shenzhen/8\">Clock</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/weather/London\">Weather</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/tasks\">Tasks</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/music\">Music</Link>\r\n          </li>\r\n        </ul>\r\n    );\r\n  }\r\n  \r\n  export default Menu;","export default __webpack_public_path__ + \"static/media/clockborder.4d2a5bcf.svg\";","export default __webpack_public_path__ + \"static/media/hourhand.05d75457.svg\";","export default __webpack_public_path__ + \"static/media/minutehand.5c9e2a8f.svg\";","export default __webpack_public_path__ + \"static/media/secondhand.4215c193.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport ClockBorder from './resources/clockborder.svg';\r\nimport HourHand from './resources/hourhand.svg';\r\nimport MinuteHand from './resources/minutehand.svg';\r\nimport SecondHand from './resources/secondhand.svg';\r\nimport './index.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const AnalogClock = ({\r\n  timeZone = 0,\r\n}: \r\n{\r\n  timeZone: number;\r\n})  => {\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  let min = date.getMinutes();\r\n  let hour = (date.getHours() + (date.getTimezoneOffset()/60) + timeZone) % 24;\r\n  let sec = date.getSeconds();\r\n\r\n  useEffect(() => {\r\n    var timerID = setInterval( () => tick(), 1000 );\r\n    return function cleanup() {\r\n        clearInterval(timerID);\r\n      };\r\n   });\r\n\r\n  const tick = () => {\r\n    setDate(new Date());\r\n  }\r\n\r\n  const pad = (num : string, size : number) => {\r\n    num = num.toString();\r\n    while (num.length < size) num = \"0\" + num;\r\n    return num;\r\n  };\r\n\r\n  const clockText = () =>\r\n  {\r\n    //console.log(date.getHours()+\", \"+(date.getTimezoneOffset()/60) +\", \"+ timeZone);\r\n    hour = (date.getHours()+(date.getTimezoneOffset()/60) + timeZone)%24;\r\n   // console.log(hour);\r\n    return(\r\n      <div className=\"text-container\">\r\n        <Row>\r\n            <span className=\"ampm-text\">{(hour < 12) ? \"AM\" : \"PM\"}</span>\r\n        </Row>\r\n        <Row>\r\n          <span className=\"time-text\">{((hour)%12 || 12)}:{pad(\"\"+min,2)}</span>\r\n        </Row>\r\n      </div>  \r\n    );\r\n  }\r\n\r\n  const secStyles = { \r\n    transform: `rotate(${sec*6}deg)`,\r\n  };\r\n  const minStyles = { \r\n    transform: `rotate(${min*6}deg)`,\r\n  };\r\n  const hourStyles = { \r\n    transform: `rotate(${(((hour)%12))*30}deg)` \r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <img className=\"clock\" src={ClockBorder} alt=\"\"/>\r\n      <img className=\"clock-imgs\" src={SecondHand} style={secStyles} alt=\"\"/>\r\n      <img className=\"clock-imgs\" src={HourHand} style={hourStyles} alt=\"\" />\r\n      <img className=\"clock-imgs\" src={MinuteHand} style={minStyles} alt=\"\"/> \r\n      {clockText()}\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\nexport default AnalogClock;","\r\nimport { Grid, Fade } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AnalogClock from \"../components/AnalogClock\";\r\nimport \"./Clock.css\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nexport const Clock = () => {\r\n\r\n\r\n  const Row = (name1: string, offset1 :number, name2 : string, offset2 : number) =>\r\n  {\r\n    let TZName1 = ((offset1 > 0) ? \"+\" : \"\") + offset1;\r\n    let TZName2 = ((offset2 > 0) ? \"+\" : \"\") + offset2;\r\n    return(\r\n      <React.Fragment>\r\n        <Grid container alignItems=\"center\">\r\n        <Grid item xs={6} >\r\n          <AnalogClock timeZone={offset1} />\r\n          <div className=\"main-label\">{name1}</div>\r\n          <div className=\"secondary-label\">GMT {TZName1}</div>\r\n        </Grid>\r\n        <Grid item xs={6} >\r\n          <AnalogClock timeZone={offset2} />\r\n          <div className=\"main-label\">{name2}</div>\r\n          <div className=\"secondary-label\">GMT {TZName2}</div>\r\n        </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const SingleClock = () => \r\n  {\r\n    let d = new Date();\r\n    \r\n    return(\r\n      <AnalogClock timeZone={-(d.getTimezoneOffset()/60)}/>\r\n    );\r\n  }\r\n\r\n\r\n  const ExpandedClock = () =>\r\n  {\r\n    let {city1,city2,city3,city4, TZ1,TZ2,TZ3,TZ4} = useParams();\r\n\r\n    return(\r\n      <Fade in timeout={1000}>\r\n        <>\r\n        <div className=\"d-sm-block d-md-none\">\r\n          <SingleClock/>\r\n          <div className=\"pad\"></div>\r\n        </div>\r\n        <div className=\"d-none d-md-block\">\r\n          <div className=\"content\">\r\n          <Grid container alignItems=\"center\" spacing={0}>\r\n              {Row (city1,+TZ1,city2,+TZ2)}\r\n              {Row (city3,+TZ3,city4,+TZ4)}\r\n          </Grid>\r\n          </div>\r\n        </div>\r\n        </>\r\n      </Fade>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{backgroundColor:\"#1F1F1F\"}}>\r\n      <Switch>\r\n        <Route path=\"/clock/:city1/:TZ1/:city2/:TZ2/:city3/:TZ3/:city4/:TZ4\" children={<ExpandedClock/>}/>\r\n        <Route path=\"/clock\" children={<SingleClock/>}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default Clock;","\r\nimport React, { useEffect,useState } from \"react\";\r\nimport {\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nimport './Weather.css';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport const Weather = () => {\r\n  let {city} = useParams();\r\n  const [fetched, setFetched] = useState(false);\r\n  const [weatherInfo, setWeatherInfo] = useState({} as WeatherData);\r\n  const API_KEY = \"9350b208afb3087791c5ecf4020574ae\";\r\n  const width = window.innerWidth;\r\n\r\n\r\n  function getCurrent() {\r\n    return fetch('https://api.openweathermap.org/data/2.5/weather?q='+city+'&appid='+API_KEY, {method:\"GET\"})\r\n    .then(data => data.json())\r\n  }\r\n  function getForecast(coord:{lat:number, lon:number})\r\n  {\r\n    return fetch('https://api.openweathermap.org/data/2.5/onecall?lat='+coord.lat+'&lon='+coord.lon+'&exclude=current,minutely,alerts&appid='+API_KEY, {method:\"GET\"}).then(data => data.json());\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resultCurrent = await getCurrent();\r\n      const resultForecast= await getForecast(resultCurrent.coord);\r\n      // parse data\r\n      const weatherData : WeatherData = {\r\n        city,\r\n        currentTemp: Math.round(resultCurrent.main.temp - 273.15),\r\n        tempMin: Math.round(resultForecast.daily[0].temp.min - 273.15),\r\n        tempMax: Math.round(resultForecast.daily[0].temp.max - 273.15),\r\n        weatherType: resultCurrent.weather[0].main,\r\n        weatherTypeIcon: resultCurrent.weather[0].icon,\r\n        hourlyForecast: resultForecast.hourly.map((item: any): HourlyData => \r\n        {\r\n          var date = new Date(0);\r\n          date.setUTCSeconds(item.dt );\r\n          \r\n          return (\r\n            {\r\n              hour: date.getHours() + date.getTimezoneOffset()/60 + (resultForecast.timezone_offset/3600),\r\n              temp: Math.round(item.temp - 273.15),\r\n              type: item.weather[0].main,\r\n              icon: item.weather[0].icon\r\n            });\r\n        }),\r\n        dailyForecast: resultForecast.daily.map((item: any): DailyData => \r\n        {\r\n          var date = new Date(0);\r\n          var weekday = new Array(7);\r\n          weekday[0] = \"Sunday\";\r\n          weekday[1] = \"Monday\";\r\n          weekday[2] = \"Tuesday\";\r\n          weekday[3] = \"Wednesday\";\r\n          weekday[4] = \"Thursday\";\r\n          weekday[5] = \"Friday\";\r\n          weekday[6] = \"Saturday\";\r\n          date.setUTCSeconds(item.dt);\r\n          return (\r\n            {\r\n              day: weekday[date.getDay()],\r\n              tempMin: Math.round(item.temp.min - 273.15),\r\n              tempMax: Math.round(item.temp.max - 273.15),\r\n              type: item.weather[0].main,\r\n              icon: item.weather[0].icon,         \r\n            });\r\n        })\r\n      };\r\n      setWeatherInfo(weatherData);\r\n    };\r\n    fetchData();\r\n\r\n  }, [city]);\r\n\r\n\r\n  const SmallView = () => {\r\n    const icon = 'http://openweathermap.org/img/wn/'+weatherInfo.weatherTypeIcon+'@2x.png';\r\n    return (\r\n        <Grid container direction=\"row\"  justify=\"space-between\" className=\"headerContainer\">\r\n          <Grid item>\r\n          <Grid container direction=\"column\" className=\"cityTempContainer\">\r\n            <span className=\"medText\">{weatherInfo.city}</span>\r\n            <div className=\"tempContainer\">\r\n              <span className=\"tempTitle\">{weatherInfo.currentTemp}</span>\r\n              <div className=\"deg\">°C</div>\r\n            </div>\r\n            <span className=\"medText\">{weatherInfo.weatherType}</span>\r\n            <span className=\"medText\">{weatherInfo.tempMin}° | {weatherInfo.tempMax}°</span>\r\n          </Grid>\r\n          </Grid>\r\n          <img className=\"weatherIcon3\" src={icon} alt=\"img\"/>\r\n        </Grid>\r\n    );\r\n\r\n  }\r\n\r\n\r\n  const Header = ()=>\r\n  {\r\n    const icon = 'http://openweathermap.org/img/wn/'+weatherInfo.weatherTypeIcon+'@2x.png';\r\n    return (\r\n      <div className=\"headerContainer\">\r\n        <Grid container direction=\"row\"  justify=\"space-between\">\r\n          <Grid item>\r\n          <Grid container direction=\"column\" className=\"cityTempContainer\">\r\n            <span className=\"medText\">{weatherInfo.city}</span>\r\n            <div className=\"tempContainer\">\r\n              <span className=\"tempTitle\">{weatherInfo.currentTemp}</span>\r\n              <div className=\"deg\">°C</div>\r\n            </div>\r\n          </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n          <Grid container direction=\"column\" className=\"weatherContainer\">\r\n            <img className=\"weatherIcon\" src={icon} alt=\"img\"/>\r\n            <span className=\"medText\">{weatherInfo.weatherType}</span>\r\n            <span className=\"medText\">{weatherInfo.tempMin}° | {weatherInfo.tempMax}°</span>\r\n          </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"divider\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const HourlyForcast = () => \r\n  {\r\n    return(\r\n      <div>\r\n        \r\n        <Grid container direction=\"row\" justify=\"space-between\" className=\"hourlyContainer\">\r\n          {weatherInfo.hourlyForecast?.map((item,index) => {\r\n            if(index >= 8)\r\n              return(<></>);\r\n            return(\r\n              <Grid direction=\"column\" className=\"hourlyItem\">\r\n                <span className=\"medText\"> {(item.hour%12)|| 12} {item.hour < 12 ? \"AM\": \"PM\"}</span>\r\n                <img className=\"weatherIcon2\" src={'http://openweathermap.org/img/wn/'+item.icon+'@2x.png'} />\r\n                <span className=\"medText\"> {item.temp}°</span>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n      <div className=\"divider\"></div>\r\n     </div>\r\n    );\r\n  }\r\n\r\n  const WeeklyForcast = () => \r\n  {\r\n    return(\r\n        <div className=\"dailyContainer\">\r\n          {weatherInfo.dailyForecast?.map((item,index) => {\r\n            if(index >= 7)\r\n              return(<></>);\r\n            return(\r\n              <Grid direction=\"row\" container justify=\"space-between\" className=\"dailyItem\">\r\n                <span className=\"dailyText\"> {item.day} </span>\r\n                <img className=\"weatherIcon2\" src={'http://openweathermap.org/img/wn/'+item.icon+'@2x.png'} />\r\n                <span className=\"dailyText\" style={{textAlign:\"right\"}}> {item.tempMin}° | {item.tempMax}°</span>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <div className=\"d-block d-sm-none\">\r\n        <SmallView/>\r\n      </div>\r\n      <div className=\"d-none d-sm-block\">\r\n        <Header/>\r\n        <HourlyForcast/>\r\n        <WeeklyForcast/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport interface WeatherData \r\n{\r\n  city: string;\r\n  currentTemp: number;\r\n  tempMin: number;\r\n  tempMax: number;\r\n  weatherType: string;\r\n  weatherTypeIcon: string\r\n  hourlyForecast: HourlyData[]\r\n  dailyForecast: DailyData[]\r\n}\r\n\r\ninterface HourlyData\r\n{\r\n  hour: number;\r\n  temp:number;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\ninterface DailyData\r\n{\r\n  day: string;\r\n  tempMin:number;\r\n  tempMax:number;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\n\r\n\r\nexport default Weather;","export default __webpack_public_path__ + \"static/media/completed.05ef88f4.svg\";","export default __webpack_public_path__ + \"static/media/todo.2e743453.svg\";","\r\nimport { Grid, Fade } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Completed from './resources/completed.svg';\r\nimport ToDo from './resources/todo.svg';\r\n\r\nimport \"./Tasks.css\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\ninterface Task\r\n{\r\n    text: string;\r\n    isComplete: boolean;\r\n}\r\n\r\n\r\nexport const Tasks = () => {\r\n\r\n    const [tasks, setTasks] = useState([] as Task[]);\r\n\r\n    useState(()=>\r\n    {\r\n        setTasks([\r\n            {text: \"Pick up milk from the store\", isComplete: true},\r\n            {text: \"Wash the car\", isComplete: true},\r\n            {text: \"Pay electrical bill \", isComplete: false},\r\n            {text: \"Hand in assignment\", isComplete: false},\r\n            {text: \"Make reservations at Pizzaria Italia\", isComplete: false},\r\n            {text: \"Mow the lawn\", isComplete: false},\r\n            {text: \"Workout\", isComplete: false},\r\n            {text: \"Get AA batteries\", isComplete: false},\r\n        ]);\r\n    });\r\n\r\n\r\n\r\n\r\n    const TaskItem = (task: Task, index:number) => {\r\n        return(\r\n            <Grid container direction=\"row\"  className=\"task-item\">\r\n                <button onClick={() => \r\n                    {\r\n                        let list = [...tasks];\r\n                        list[index].isComplete = !list[index].isComplete;\r\n                        setTasks(list);\r\n                    }}>\r\n                    <img className=\"complete-button\"src={task.isComplete ? Completed : ToDo } />\r\n                </button>\r\n                <p className=\"task-text\">{task.text}</p>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    return(\r\n        <Grid container direction=\"row\">\r\n            <div className=\"header\">\r\n                <p className=\"task-number\">{tasks.length}</p>\r\n                <div className=\"task-small\">Tasks</div> \r\n            </div>\r\n            <div className=\"task-list\">\r\n                {tasks.map((item, index) => {\r\n                    if(item.isComplete)\r\n                        return (TaskItem(item, index));\r\n                    return null;\r\n                })}\r\n                <div className=\"divider\"></div>\r\n                {tasks.map((item, index) => {\r\n                    if(!item.isComplete)\r\n                        return (TaskItem(item, index));\r\n                    return null;\r\n                })}\r\n            </div>\r\n        </Grid>\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Tasks; ","\r\nimport { Grid, Fade } from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\n\r\nimport React, { useState,useEffect } from \"react\";\r\nimport \"./Music.css\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst clientId = \"eda3b64588f64c89b87ec0cba023ae4a\";\r\nconst redirectUri = \"https://adrianpolimeni.github.io/workspace/\";\r\n//const redirectUri = \"https://localhost:3000/workspace/\";\r\nconst scopes = [\r\n    \"user-read-currently-playing\",\r\n    \"user-read-playback-state\",\r\n    \"user-modify-playback-state\",\r\n    \"app-remote-control\"\r\n  ];\r\n\r\n// Endpoints\r\nexport const AUTH : string = 'https://accounts.spotify.com/authorize';\r\nexport const GET_PLAYLIST : string = \"https://api.spotify.com/v1/playlists/\";\r\nexport const GET_ALBUM : string = \"https://api.spotify.com/v1/albums/\";\r\nexport const GET_ARTIST_TRACKS : string = \"https://api.spotify.com/v1/artists/\";\r\n\r\nexport const GET_TRACK : string =\"https://api.spotify.com/v1/me/player/currently-playing\"\r\nexport const PLAY_TRACK : string = \"https://api.spotify.com/v1/me/player/play\"; // PUT\r\nexport const PAUSE_TRACK : string = \"https://api.spotify.com/v1/me/player/pause\"; // PUT\r\nexport const NEXT_TRACK : string = \"https://api.spotify.com/v1/me/player/next\"; //POST\r\nexport const PREV_TRACK : string = \"https://api.spotify.com/v1/me/player/previous\"; //POST\r\nexport const VOLUME : string = \"https://api.spotify.com/v1/me/player/volume\";\r\n\r\ninterface Track\r\n{\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n    track_number: number;\r\n    artists: Artist[];\r\n    duration_ms: number;\r\n}\r\n\r\ninterface Artist\r\n{\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\n\r\nexport const Music = () => {\r\n\r\n    const headers = (token : string) => {\r\n        return( new Headers({\r\n        'Authorization': 'Bearer '+token, \r\n        'Content-Type': 'application/json'}));\r\n    }\r\n\r\n    function GET(endpoint: string, token: string)\r\n    {\r\n      return fetch(endpoint, \r\n        {\r\n            method:\"GET\",\r\n            headers: headers(token) \r\n        }).then(data => data.json());\r\n    }\r\n\r\n    function PUT(endpoint: string, token: string)\r\n    {\r\n      return fetch(endpoint, \r\n        {\r\n            method:\"PUT\",\r\n            headers: headers(token) \r\n        });\r\n    }\r\n\r\n    function POST(endpoint: string, token: string)\r\n    {\r\n      return fetch(endpoint, \r\n        {\r\n            method:\"POST\",\r\n            headers: headers(token) \r\n        });\r\n    }\r\n\r\n    const getTrackList = async (trackContext : any, token : string) =>\r\n    {\r\n        const id = trackContext.uri.split(\":\")[2];\r\n        let trackList : any[] = [];\r\n        switch(trackContext.type)\r\n        {\r\n            case \"playlist\":\r\n                const playlistRespose = await GET(GET_PLAYLIST + id + \"/tracks\", token);\r\n                trackList = (playlistRespose.items as any[]).map(item => item.track);\r\n            break;\r\n            case \"album\":\r\n                const albumResponse = await GET(GET_ALBUM + id + \"/tracks\", token);\r\n                trackList = albumResponse.items;\r\n                break;\r\n            case \"artist\":\r\n                const artistRespose = await GET(GET_ARTIST_TRACKS + id + \"/top-tracks?market=CA\", token);\r\n                trackList = artistRespose.tracks;\r\n\r\n                break;\r\n        }\r\n\r\n        trackList.forEach(element => {\r\n            element.image = element.album.images[1].url;\r\n        });\r\n\r\n        return trackList as Track[]; \r\n    }\r\n\r\n\r\n    const setVolume = async (volume:number, token: string)=> \r\n    {\r\n        const response = await PUT(VOLUME+\"?volume_percent=\"+volume,token);\r\n    }\r\n\r\n    const MusicViewer = () => \r\n    {\r\n        let {responseToken} = useParams();\r\n        const [token, setToken] = useState(responseToken.split(\"=\")[1].split(\"&\")[0]);\r\n        const [trackList, setTrackList] = useState([] as Track[]);\r\n        const [currentTrack, setCurrentTrack] = useState({} as Track);\r\n        const [progress, setProgress] = useState(0);\r\n        const [isPlaying, setIsPlaying] = useState(false);\r\n        const [volume, setVolume] = useState(100);\r\n        const [startTime,setStartTime] = useState(Date.now);\r\n        const [lastTime,setLastTime] = useState(Date.now);\r\n    \r\n        useEffect(()=>\r\n        {\r\n            const getInitialInfo = async () => {\r\n                const trackRespose = await GET(GET_TRACK+\"?market=CA\", token);\r\n                let track = trackRespose.item;\r\n                track.image = trackRespose.item.album.images[1].url;\r\n                setCurrentTrack(track);\r\n                setIsPlaying(trackRespose.is_playing);\r\n                setProgress(trackRespose.progress_ms);\r\n                const list = await getTrackList(trackRespose.context, token);\r\n                setTrackList(list);\r\n            }\r\n            if(token != null)\r\n                getInitialInfo();\r\n            \r\n        },[token]);\r\n\r\n        useEffect(()=>\r\n        {\r\n            if(isPlaying){\r\n                setStartTime(Date.now());\r\n                setLastTime(Date.now())\r\n            }else\r\n            {\r\n\r\n\r\n            }\r\n        },[isPlaying]);\r\n\r\n        useEffect(() => {\r\n            var timerID = setInterval( () => tick(), 500 );\r\n            return function cleanup() {\r\n                clearInterval(timerID);\r\n              };\r\n           });\r\n        \r\n          const tick = () => {\r\n            var now :number = Date.now();\r\n            \r\n            if(isPlaying){\r\n                setLastTime(now);\r\n                if(now - lastTime + progress >= currentTrack.duration_ms)\r\n                {\r\n                    setTrack(1);\r\n                    setProgress(0);\r\n                }else\r\n                    setProgress(now - lastTime + progress);\r\n            }\r\n          }\r\n\r\n        const trackListItem = (item: Track) => {\r\n            \r\n            return(\r\n                <div className=\"track_item\">   \r\n                    <img className=\"image_small\" src={item.image} />\r\n                    <div>\r\n                        <div className=\"title_2\">{item.name}</div>\r\n                        <div className=\"subtext_2\">{listArtists(item.artists)}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const TrackListContainer = () => {\r\n            let currentIndex = getIndex(currentTrack.id);\r\n            return(\r\n                <div className=\"track_list\">\r\n                    {trackList.map(item => {\r\n                        if(getIndex(item.id) <= currentIndex)\r\n                            return (null);\r\n                        return(trackListItem(item));\r\n                        })}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const listArtists = (artists : Artist[]) => {\r\n            if(artists){\r\n                const names = artists.map(artist => artist.name);\r\n                const finalName = names.pop();\r\n                return names.length\r\n                ? names.join(', ') + ' & ' + finalName\r\n                : finalName;\r\n            }\r\n            return null;\r\n        }\r\n        \r\n        const scrubberPos = ()=>\r\n        {\r\n            return (100.0*(progress/currentTrack.duration_ms))+\"%\";\r\n        }\r\n\r\n        const getIndex = (id : string) => \r\n        {\r\n            return trackList.findIndex(item => item.id == id);\r\n        }\r\n\r\n        const playPause = async () => \r\n        {\r\n            if(isPlaying){\r\n                await PUT(PAUSE_TRACK,token)\r\n            }else{\r\n                await PUT(PLAY_TRACK,token)\r\n            }\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n        \r\n        const setTrack = (amount : number) =>\r\n        {\r\n            let index = (getIndex(currentTrack.id) + trackList.length +amount) % trackList.length;\r\n            setCurrentTrack(trackList[index]);\r\n            setProgress(0);\r\n        }\r\n\r\n        return(\r\n            <div className=\"main\">\r\n                <div className=\"top\">\r\n                <img src={currentTrack.image} className=\"track_art_large\"/>\r\n                <div className=\"player\">\r\n                    <div className=\"title\"> {currentTrack.name}</div>\r\n                    <div className=\"subtext\">{listArtists(currentTrack.artists)}</div>\r\n                    <div className=\"scrubber-bar\">\r\n                        <div className=\"scrubber\" style={{width:scrubberPos()}}> </div>\r\n                    </div>\r\n                    <div className=\"controls\">\r\n                        <button onClick={async () =>  \r\n                            {\r\n                                await POST(PREV_TRACK,token);\r\n                                setIsPlaying(true);\r\n                                setTrack(-1);\r\n                            }}>\r\n                        <SkipPreviousIcon style={{ fontSize: 72 }}/>\r\n                        </button>\r\n                        <button onClick={ playPause }>\r\n                        { isPlaying ? \r\n                        <PauseIcon style={{ fontSize: 72 }}/>:\r\n                        <PlayArrowIcon style={{ fontSize: 72 }}/>}\r\n                        </button>\r\n                        <button onClick={async () =>  \r\n                            {\r\n                                await POST(NEXT_TRACK,token);\r\n                                setIsPlaying(true);\r\n                                setTrack(1);\r\n                            }}>\r\n                        <SkipNextIcon style={{ fontSize: 72 }}/>\r\n                        </button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                </div>\r\n                <TrackListContainer/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const Redirect = () =>\r\n    {\r\n        let url = `${AUTH}?client_id=${clientId}&show_dialog=true&response_type=token&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}`;\r\n        return(\r\n            <meta http-equiv=\"refresh\" content={\"0; url=\"+url} />\r\n        );\r\n    }\r\n\r\n    const Login = () =>\r\n    {\r\n        return(\r\n            <div className=\"main\">\r\n                <div className=\"login\">Login to Spotify</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return(\r\n        \r\n        <div>\r\n            <Switch>    \r\n                <Route path=\"/music-login\" children={<Login/>}/>\r\n                <Route path=\"/music\" children={<Redirect/>}/>   \r\n                <Route path=\"/:responseToken\" children={<MusicViewer/>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music; ","\r\nimport React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport Menu from \"./pages/Menu\";\r\nimport Clock from \"./pages/Clock\";\r\nimport Weather from \"./pages/Weather\";\r\nimport Tasks from \"./pages/Tasks\";\r\nimport Music from \"./pages/Music\";\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Menu />\r\n      </Route>\r\n      <Route path=\"/:access_token(access_token=.*)\"component={Music} />\r\n      <Route path=\"/clock\">\r\n        <Clock />\r\n      </Route>\r\n      <Route path=\"/weather/:city\">\r\n        <Weather />\r\n      </Route>\r\n      <Route path=\"/tasks\">\r\n        <Tasks />\r\n      </Route>\r\n      <Route path=\"/music\">\r\n        <Music />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { HashRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n     <App />\r\n   </Router>,\r\n  document.getElementById('root')\r\n  );\r\n"],"sourceRoot":""}