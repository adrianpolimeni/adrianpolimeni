{"version":3,"sources":["pages/Menu.js","components/AnalogClock/resources/clockborder.svg","components/AnalogClock/resources/hourhand.svg","components/AnalogClock/resources/minutehand.svg","components/AnalogClock/resources/secondhand.svg","components/AnalogClock/index.tsx","pages/Clock.tsx","pages/Weather.tsx","App.js","index.js"],"names":["Menu","to","AnalogClock","timeZone","useState","Date","date","setDate","min","getMinutes","hour","getHours","getTimezoneOffset","sec","getSeconds","useEffect","timerID","setInterval","tick","clearInterval","pad","num","size","toString","length","secStyles","transform","minStyles","hourStyles","className","src","ClockBorder","alt","SecondHand","style","HourHand","MinuteHand","Clock","Row","name1","offset1","name2","offset2","TZName1","TZName2","Fragment","Grid","container","alignItems","item","xs","SingleClock","ExpandedClock","useParams","city1","city2","city3","city4","TZ1","TZ2","TZ3","TZ4","Fade","in","timeout","spacing","backgroundColor","path","children","Weather","city","weatherInfo","setWeatherInfo","API_KEY","window","innerWidth","a","fetch","method","then","data","json","resultCurrent","coord","lat","lon","resultForecast","weatherData","currentTemp","Math","round","main","temp","tempMin","daily","tempMax","max","weatherType","weather","weatherTypeIcon","icon","hourlyForecast","hourly","map","setUTCSeconds","dt","timezone_offset","type","dailyForecast","weekday","Array","day","getDay","fetchData","SmallView","direction","justify","Header","HourlyForcast","index","WeeklyForcast","textAlign","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dedd736e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Menu() {\r\n    return (\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/workspace/clock\">Clock</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/workspace/weather/London\">Weather</Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n  \r\n  export default Menu;","export default __webpack_public_path__ + \"static/media/clockborder.4d2a5bcf.svg\";","export default __webpack_public_path__ + \"static/media/hourhand.05d75457.svg\";","export default __webpack_public_path__ + \"static/media/minutehand.5c9e2a8f.svg\";","export default __webpack_public_path__ + \"static/media/secondhand.4215c193.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ClockBorder from './resources/clockborder.svg';\r\nimport HourHand from './resources/hourhand.svg';\r\nimport MinuteHand from './resources/minutehand.svg';\r\nimport SecondHand from './resources/secondhand.svg';\r\nimport './index.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const AnalogClock = ({\r\n  timeZone = 0,\r\n}: \r\n{\r\n  timeZone: number;\r\n})  => {\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  let min = date.getMinutes();\r\n  let hour = (date.getHours() + (date.getTimezoneOffset()/60) + timeZone) % 24;\r\n  let sec = date.getSeconds();\r\n\r\n  useEffect(() => {\r\n    var timerID = setInterval( () => tick(), 1000 );\r\n    return function cleanup() {\r\n        clearInterval(timerID);\r\n      };\r\n   });\r\n\r\n  const tick = () => {\r\n    setDate(new Date());\r\n  }\r\n\r\n  const pad = (num : string, size : number) => {\r\n    num = num.toString();\r\n    while (num.length < size) num = \"0\" + num;\r\n    return num;\r\n  };\r\n\r\n  const clockText = () =>\r\n  {\r\n    //console.log(date.getHours()+\", \"+(date.getTimezoneOffset()/60) +\", \"+ timeZone);\r\n    hour = (date.getHours()+(date.getTimezoneOffset()/60) + timeZone)%24;\r\n   // console.log(hour);\r\n    return(\r\n      <div className=\"text-container\">\r\n        <Row>\r\n            <span className=\"ampm-text\">{(hour < 12) ? \"AM\" : \"PM\"}</span>\r\n        </Row>\r\n        <Row>\r\n          <span className=\"time-text\">{((hour)%12 || 12)}:{pad(\"\"+min,2)}</span>\r\n        </Row>\r\n      </div>  \r\n    );\r\n  }\r\n\r\n  const secStyles = { \r\n    transform: `rotate(${sec*6}deg)`,\r\n  };\r\n  const minStyles = { \r\n    transform: `rotate(${min*6}deg)`,\r\n  };\r\n  const hourStyles = { \r\n    transform: `rotate(${(((hour)%12))*30}deg)` \r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <img className=\"clock\" src={ClockBorder} alt=\"\"/>\r\n      <img className=\"clock-imgs\" src={SecondHand} style={secStyles} alt=\"\"/>\r\n      <img className=\"clock-imgs\" src={HourHand} style={hourStyles} alt=\"\" />\r\n      <img className=\"clock-imgs\" src={MinuteHand} style={minStyles} alt=\"\"/> \r\n      {clockText()}\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\nexport default AnalogClock;","\r\nimport { Card, Grid, Fade } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AnalogClock from \"../components/AnalogClock\";\r\nimport \"./Clock.css\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nexport const Clock = () => {\r\n\r\n\r\n  const Row = (name1: string, offset1 :number, name2 : string, offset2 : number) =>\r\n  {\r\n    let TZName1 = ((offset1 > 0) ? \"+\" : \"\") + offset1;\r\n    let TZName2 = ((offset2 > 0) ? \"+\" : \"\") + offset2;\r\n    return(\r\n      <React.Fragment>\r\n        <Grid container alignItems=\"center\">\r\n        <Grid item xs={6} >\r\n          <AnalogClock timeZone={offset1} />\r\n          <div className=\"main-label\">{name1}</div>\r\n          <div className=\"secondary-label\">GMT {TZName1}</div>\r\n        </Grid>\r\n        <Grid item xs={6} >\r\n          <AnalogClock timeZone={offset2} />\r\n          <div className=\"main-label\">{name2}</div>\r\n          <div className=\"secondary-label\">GMT {TZName2}</div>\r\n        </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const SingleClock = () => \r\n  {\r\n    return(\r\n      <AnalogClock timeZone={0}/>\r\n    );\r\n  }\r\n\r\n\r\n  const ExpandedClock = () =>\r\n  {\r\n    let {city1,city2,city3,city4, TZ1,TZ2,TZ3,TZ4} = useParams();\r\n\r\n    return(\r\n      <Fade in timeout={1000}>\r\n        <>\r\n        <div className=\"d-sm-block d-md-none\">\r\n          <SingleClock/>\r\n          <div className=\"pad\"></div>\r\n        </div>\r\n        <div className=\"d-none d-md-block\">\r\n          <div className=\"content\">\r\n          <Grid container alignItems=\"center\" spacing={0}>\r\n              {Row (city1,+TZ1,city2,+TZ2)}\r\n              {Row (city3,+TZ3,city4,+TZ4)}\r\n          </Grid>\r\n          </div>\r\n        </div>\r\n        </>\r\n      </Fade>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{backgroundColor:\"#1F1F1F\"}}>\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/workspace/clock/:city1/:TZ1/:city2/:TZ2/:city3/:TZ3/:city4/:TZ4\" children={<ExpandedClock/>}/>\r\n        <Route path=\"/workspace/clock\" children={<SingleClock/>}/>\r\n      </Switch>\r\n    </Router>\r\n    </div>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default Clock;","\r\nimport React, { useEffect,useState } from \"react\";\r\nimport {\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nimport './Weather.css';\r\nimport { Card, Grid, GridList } from \"@material-ui/core\";\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport const Weather = () => {\r\n  let {city} = useParams();\r\n  const [fetched, setFetched] = useState(false);\r\n  const [weatherInfo, setWeatherInfo] = useState({} as WeatherData);\r\n  const API_KEY = \"9350b208afb3087791c5ecf4020574ae\";\r\n  const width = window.innerWidth;\r\n\r\n\r\n  function getCurrent() {\r\n    return fetch('https://api.openweathermap.org/data/2.5/weather?q='+city+'&appid='+API_KEY, {method:\"GET\"})\r\n    .then(data => data.json())\r\n  }\r\n  function getForecast(coord:{lat:number, lon:number})\r\n  {\r\n    return fetch('https://api.openweathermap.org/data/2.5/onecall?lat='+coord.lat+'&lon='+coord.lon+'&exclude=current,minutely,alerts&appid='+API_KEY, {method:\"GET\"}).then(data => data.json());\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resultCurrent = await getCurrent();\r\n      const resultForecast= await getForecast(resultCurrent.coord);\r\n      // parse data\r\n      const weatherData : WeatherData = {\r\n        city,\r\n        currentTemp: Math.round(resultCurrent.main.temp - 273.15),\r\n        tempMin: Math.round(resultForecast.daily[0].temp.min - 273.15),\r\n        tempMax: Math.round(resultForecast.daily[0].temp.max - 273.15),\r\n        weatherType: resultCurrent.weather[0].main,\r\n        weatherTypeIcon: resultCurrent.weather[0].icon,\r\n        hourlyForecast: resultForecast.hourly.map((item: any): HourlyData => \r\n        {\r\n          var date = new Date(0);\r\n          date.setUTCSeconds(item.dt );\r\n          \r\n          return (\r\n            {\r\n              hour: date.getHours() + date.getTimezoneOffset()/60 + (resultForecast.timezone_offset/3600),\r\n              temp: Math.round(item.temp - 273.15),\r\n              type: item.weather[0].main,\r\n              icon: item.weather[0].icon\r\n            });\r\n        }),\r\n        dailyForecast: resultForecast.daily.map((item: any): DailyData => \r\n        {\r\n          var date = new Date(0);\r\n          var weekday = new Array(7);\r\n          weekday[0] = \"Sunday\";\r\n          weekday[1] = \"Monday\";\r\n          weekday[2] = \"Tuesday\";\r\n          weekday[3] = \"Wednesday\";\r\n          weekday[4] = \"Thursday\";\r\n          weekday[5] = \"Friday\";\r\n          weekday[6] = \"Saturday\";\r\n          date.setUTCSeconds(item.dt);\r\n          return (\r\n            {\r\n              day: weekday[date.getDay()],\r\n              tempMin: Math.round(item.temp.min - 273.15),\r\n              tempMax: Math.round(item.temp.max - 273.15),\r\n              type: item.weather[0].main,\r\n              icon: item.weather[0].icon,         \r\n            });\r\n        })\r\n      };\r\n      setWeatherInfo(weatherData);\r\n    };\r\n    fetchData();\r\n\r\n  }, [city]);\r\n\r\n\r\n  const SmallView = () => {\r\n    const icon = 'http://openweathermap.org/img/wn/'+weatherInfo.weatherTypeIcon+'@2x.png';\r\n    return (\r\n        <Grid container direction=\"row\"  justify=\"space-between\" className=\"headerContainer\">\r\n          <Grid item>\r\n          <Grid container direction=\"column\" className=\"cityTempContainer\">\r\n            <span className=\"medText\">{weatherInfo.city}</span>\r\n            <div className=\"tempContainer\">\r\n              <span className=\"tempTitle\">{weatherInfo.currentTemp}</span>\r\n              <div className=\"deg\">°C</div>\r\n            </div>\r\n            <span className=\"medText\">{weatherInfo.weatherType}</span>\r\n            <span className=\"medText\">{weatherInfo.tempMin}° | {weatherInfo.tempMax}°</span>\r\n          </Grid>\r\n          </Grid>\r\n          <img className=\"weatherIcon3\" src={icon} alt=\"img\"/>\r\n        </Grid>\r\n    );\r\n\r\n  }\r\n\r\n\r\n  const Header = ()=>\r\n  {\r\n    const icon = 'http://openweathermap.org/img/wn/'+weatherInfo.weatherTypeIcon+'@2x.png';\r\n    return (\r\n      <div className=\"headerContainer\">\r\n        <Grid container direction=\"row\"  justify=\"space-between\">\r\n          <Grid item>\r\n          <Grid container direction=\"column\" className=\"cityTempContainer\">\r\n            <span className=\"medText\">{weatherInfo.city}</span>\r\n            <div className=\"tempContainer\">\r\n              <span className=\"tempTitle\">{weatherInfo.currentTemp}</span>\r\n              <div className=\"deg\">°C</div>\r\n            </div>\r\n          </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n          <Grid container direction=\"column\" className=\"weatherContainer\">\r\n            <img className=\"weatherIcon\" src={icon} alt=\"img\"/>\r\n            <span className=\"medText\">{weatherInfo.weatherType}</span>\r\n            <span className=\"medText\">{weatherInfo.tempMin}° | {weatherInfo.tempMax}°</span>\r\n          </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"divider\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const HourlyForcast = () => \r\n  {\r\n    return(\r\n      <div>\r\n        \r\n        <Grid container direction=\"row\" justify=\"space-between\" className=\"hourlyContainer\">\r\n          {weatherInfo.hourlyForecast?.map((item,index) => {\r\n            if(index >= 8)\r\n              return(<></>);\r\n            return(\r\n              <Grid direction=\"column\" className=\"hourlyItem\">\r\n                <span className=\"medText\"> {(item.hour%12)|| 12} {item.hour < 12 ? \"AM\": \"PM\"}</span>\r\n                <img className=\"weatherIcon2\" src={'http://openweathermap.org/img/wn/'+item.icon+'@2x.png'} />\r\n                <span className=\"medText\"> {item.temp}°</span>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n      <div className=\"divider\"></div>\r\n     </div>\r\n    );\r\n  }\r\n\r\n  const WeeklyForcast = () => \r\n  {\r\n    return(\r\n        <div className=\"dailyContainer\">\r\n          {weatherInfo.dailyForecast?.map((item,index) => {\r\n            if(index >= 7)\r\n              return(<></>);\r\n            return(\r\n              <Grid direction=\"row\" container justify=\"space-between\" className=\"dailyItem\">\r\n                <span className=\"dailyText\"> {item.day} </span>\r\n                <img className=\"weatherIcon2\" src={'http://openweathermap.org/img/wn/'+item.icon+'@2x.png'} />\r\n                <span className=\"dailyText\" style={{textAlign:\"right\"}}> {item.tempMin}° | {item.tempMax}°</span>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <div className=\"d-block d-sm-none\">\r\n        <SmallView/>\r\n      </div>\r\n      <div className=\"d-none d-sm-block\">\r\n        <Header/>\r\n        <HourlyForcast/>\r\n        <WeeklyForcast/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport interface WeatherData \r\n{\r\n  city: string;\r\n  currentTemp: number;\r\n  tempMin: number;\r\n  tempMax: number;\r\n  weatherType: string;\r\n  weatherTypeIcon: string\r\n  hourlyForecast: HourlyData[]\r\n  dailyForecast: DailyData[]\r\n}\r\n\r\ninterface HourlyData\r\n{\r\n  hour: number;\r\n  temp:number;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\ninterface DailyData\r\n{\r\n  day: string;\r\n  tempMin:number;\r\n  tempMax:number;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\n\r\n\r\nexport default Weather;","\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport Menu from \"./pages/Menu\";\r\nimport Clock from \"./pages/Clock\";\r\nimport Weather from \"./pages/Weather\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/workspace\">\r\n            <Menu />\r\n          </Route>\r\n          <Route path=\"/workspace/clock\">\r\n            <Clock />\r\n          </Route>\r\n          <Route path=\"/workspace/weather/:city\">\r\n            <Weather />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n  );\r\n"],"sourceRoot":""}